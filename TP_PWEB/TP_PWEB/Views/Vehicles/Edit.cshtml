@model TP_PWEB.Models.VehicleAndVerifications

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Vehicles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Vehicle</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.vehicle.IDVehicle)
        @Html.HiddenFor(model => model.idCategory)

        <div class="form-group">
            @Html.LabelFor(model => model.vehicle.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vehicle.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vehicle.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vehicle.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vehicle.Model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vehicle.Model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vehicle.NumberKm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vehicle.NumberKm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vehicle.NumberKm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vehicle.VehicleTank, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vehicle.VehicleTank, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vehicle.VehicleTank, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vehicle.Damages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.vehicle.Damages)
                    @Html.ValidationMessageFor(model => model.vehicle.Damages, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vehicle.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vehicle.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vehicle.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idCategory, "idCategory", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idCategory", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.idCategory, "", new { @class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <input type="file" name="singleFile"/>
        </div>

        <h4>Custom Verifications</h4>
        <div class="control-label col-md-2">
            <ol>
                @for (int i = 0; i < Model.ListOfVerifications.Count(); i++)
                {
                    var disp = Model.ListOfVerifications.ElementAt(i).VerificationName;
                    var cb = Model.ChoosenVerifications;
                    <li>
                        @Html.DisplayFor(modelItem => disp, new { id = " allText " })
                        @Html.EditorFor(model => Model.ChoosenVerifications[i])
                    </li>
                }
            </ol>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
